{% extends "template.twig" %}
{% block title %}Registration{% endblock %}
{% block section %}dayof{% endblock %}
{% block subnav %}{% include "dayof/subnav.twig" %}{% endblock %}
{% block content %}
    <header>
        <h2>Registration</h2>
        <p>You can use this to manually register a student and charge their credit card at the door. This will bypass
           any registration caps, so be cautious with this.</p>
        <p>If multiple people are registering on one card, we recommend billing the first for the cost of all
           registrations, and processing the rest as free.</p>
        <p>Card-swiping requires a keyboard-emulation card reader which can read at least track 1.</p>
    </header>

    <form id="register-form" method="post">
        <section class="student">
            <h2>Student Information</h2>
            <div class="field">
                <label for="first_name">First Name</label>
                <input type="text" name="first_name" id="first_name" required />
            </div>
            <div class="field">
                <label for="last_name">Last Name</label>
                <input type="text" name="last_name" id="last_name" required />
            </div>
            <div class="field">
                <label for="email">Email</label>
                <input type="email" name="email" id="email" required />
            </div>
        </section>
        <section class="parent">
            <h2>Parent Info (if under 18)</h2>
            <div class="field">
                <label for="parent_name">Name</label>
                <input name="parent_name" id="parent_name" type="text"/>
            </div>
            <div class="field">
                <label for="parent_email">Email</label>
                <input name="parent_email" id="parent_email" type="email" />
            </div>
            <div class="field">
                <label for="parent_phone">Phone</label>
                <input name="parent_phone" id="parent_phone" type="text"/>
            </div>
            <div class="field">
                <label for="parent_secondary_phone">Secondary Phone</label>
                <input name="parent_secondary_phone" id="parent_secondary_phone" type="text"/>
            </div>
        </section>
        <section class="payment">
            <h2>Billing Info</h2>
            <div class="field">
                <label for="amount">Amount to Bill</label>
                <input type="number" name="amount" id="amount" value="{{ event.cost }}" min="0" required />
                <span class="help">Used for credit card billing only. Enter 0 if cash received.</span>
            </div>
            <div class="field">
                <label for="card">Card Info</label>
                <div class="group combined">
                    <div id="card-details">
                        <input type="text" id="card" style="width:100%" placeholder="4242 4242 4242 4242" required /><br />
                        <input type="text" id="mm" name="mm" pattern="\d\d?" placeholder="MM" required />
                        <input type="text" id="yy" name="yy" pattern="\d\d(\d\d)?" placeholder="YYYY" required /><br />
                        <a href="#" id="card-swipe-handle">Swipe Card</a>
                    </div>
                    <div id="swipe-details" style="display:none">
                        <input type="text" id="card-swipe-area" placeholder="Swipe card now..." />
                        <a href="#" id="card-swipe-cancel-handle">Cancel</a>
                    </div>
                </div>
            </div>
        </section>
        <input type="hidden" id="token" name="token" value=""/>
        <input type="submit" id="pay-button" value="Register" />
    {{ csrf|raw }}</form>
{% endblock %}
{% block scripts %}
    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
    <script type="text/javascript">

        // # Payment Display
        $("#amount").on('input', function(){
            var paymentElems = $("#card, #mm, #yy");
            var paymentParents = paymentElems.parents('div.field');
            if ($(this).val() > 0) {
                paymentElems.attr('required', true);
                paymentParents.css('display', 'block');
            } else {
                paymentElems.attr('required', false).val('');
                paymentParents.css('display', 'none');
            }
        });

        // # Card Swiping
        $('#card-swipe-handle').on('click', function(){
            $('#swipe-details').css('display','block');
            $('#card-details').css('display', 'none');
            $('#card-swipe-area').val('').focus();
        });

        $('#card-swipe-cancel-handle').on('click', function(){
            $('#swipe-details').css('display','none');
            $('#card-details').css('display', 'block');
            $('#card-swipe-area').val('');
        });

        var parseSwipeData = function(swipe)
        {
            var trackOneStartsAt = swipe.indexOf('%');
            if (trackOneStartsAt < 0) throw "Unsupported reader.";
            var trackOneEndsAt = swipe.indexOf('?');
            var trackOneContent = swipe.substr(trackOneStartsAt + 1, trackOneEndsAt - trackOneStartsAt - 1);
            var components = trackOneContent.split('^');

            var cardType = components[0].substr(0,1);
            var cardNumber = components[0].substr(1);

            var nameComponents = components[1].split('/');
            var name = nameComponents.length != 2 ? components[1] :
            {first: nameComponents[1], last: nameComponents[0]};

            var expMonth = components[2].substr(0,2);
            var expYear = components[2].substr(2,2);

            return {
                type: cardType,
                number: cardNumber,
                name: name,
                exp: {
                    month: expMonth,
                    year: expYear
                }
            };
        }

        $('#card-swipe-area').on('keydown', function(event){
            event.stopPropagation();
            if (event.keyCode == 13) {
                event.preventDefault();
                var swiped = $(this).val();
                var cardInfo = parseSwipeData(swiped);

                $('#card').val(cardInfo.number);
                $('#mm').val(cardInfo.exp.month);
                $('#yy').val(cardInfo.exp.year);

                if (typeof(cardInfo.name) === 'object'
                        && $('#first_name').val().length === 0 && $('#last_name').val().length === 0) {
                    var prettyName = function(name) {
                        return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
                    };

                    $('#first_name').val(prettyName(cardInfo.name.first));
                    $('#last_name').val(prettyName(cardInfo.name.last));
                }

                $('#card-swipe-cancel-handle').click();
                return false;
            }
        });

        // # Process Payments
        Stripe.setPublishableKey('{{ stripe_pk }}');
        $('#pay-button').click(function(e){
            if ($("#amount").val() == 0) {
                return;
            }
            e.preventDefault();

            if ($('#pay-button').text() == '...') {
                return;
            }

            $('#pay-button').text('...');

            Stripe.card.createToken({
                number: $('#card').val(),
                exp_month: $('#mm').val(),
                exp_year: $('#yy').val()
            },
            function(status, response) {
                if (response.error) {
                    swal({
                        title: 'Error',
                        text: response.error.message,
                        type: 'error'
                    });
                    $('#pay-button').text('Register');
                } else {
                    var token = response.id;
                    $('#token').val(token);
                    $('#register-form').submit();
                }
            });
        });
    </script>
{% endblock %}
